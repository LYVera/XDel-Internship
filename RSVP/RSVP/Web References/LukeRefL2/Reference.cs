//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RSVP.LukeRefL2 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="L2Soap", Namespace="http://www.xdel.com/L2/")]
    public partial class L2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetL2DriversOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public L2() {
            this.Url = global::RSVP.Properties.Settings.Default.RSVP_LukeRefL2_L2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetL2DriversCompletedEventHandler GetL2DriversCompleted;
        
        /// <remarks/>
        public event GetLocationsCompletedEventHandler GetLocationsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xdel.com/L2/GetL2Drivers", RequestNamespace="http://www.xdel.com/L2/", ResponseNamespace="http://www.xdel.com/L2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DriverObject[] GetL2Drivers(string APIKey) {
            object[] results = this.Invoke("GetL2Drivers", new object[] {
                        APIKey});
            return ((DriverObject[])(results[0]));
        }
        
        /// <remarks/>
        public void GetL2DriversAsync(string APIKey) {
            this.GetL2DriversAsync(APIKey, null);
        }
        
        /// <remarks/>
        public void GetL2DriversAsync(string APIKey, object userState) {
            if ((this.GetL2DriversOperationCompleted == null)) {
                this.GetL2DriversOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetL2DriversOperationCompleted);
            }
            this.InvokeAsync("GetL2Drivers", new object[] {
                        APIKey}, this.GetL2DriversOperationCompleted, userState);
        }
        
        private void OnGetL2DriversOperationCompleted(object arg) {
            if ((this.GetL2DriversCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetL2DriversCompleted(this, new GetL2DriversCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.xdel.com/L2/GetLocations", RequestNamespace="http://www.xdel.com/L2/", ResponseNamespace="http://www.xdel.com/L2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LocationInfo[] GetLocations(string APIKey, long ADriverIDX, int NumberOfRecords) {
            object[] results = this.Invoke("GetLocations", new object[] {
                        APIKey,
                        ADriverIDX,
                        NumberOfRecords});
            return ((LocationInfo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationsAsync(string APIKey, long ADriverIDX, int NumberOfRecords) {
            this.GetLocationsAsync(APIKey, ADriverIDX, NumberOfRecords, null);
        }
        
        /// <remarks/>
        public void GetLocationsAsync(string APIKey, long ADriverIDX, int NumberOfRecords, object userState) {
            if ((this.GetLocationsOperationCompleted == null)) {
                this.GetLocationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationsOperationCompleted);
            }
            this.InvokeAsync("GetLocations", new object[] {
                        APIKey,
                        ADriverIDX,
                        NumberOfRecords}, this.GetLocationsOperationCompleted, userState);
        }
        
        private void OnGetLocationsOperationCompleted(object arg) {
            if ((this.GetLocationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationsCompleted(this, new GetLocationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xdel.com/L2/")]
    public partial class DriverObject {
        
        private long driverIDXField;
        
        private string idField;
        
        private string nameField;
        
        private string nickField;
        
        private string mobileField;
        
        private string postalCodeField;
        
        private VehicleObject[] vehiclesField;
        
        private System.DateTime dateStartedField;
        
        private System.DateTime dateTerminatedField;
        
        private bool activeField;
        
        private LocationInfo lastKnownLocationField;
        
        private bool idleDetectedField;
        
        private int battPCTField;
        
        private System.DateTime battLastUpdateField;
        
        /// <remarks/>
        public long DriverIDX {
            get {
                return this.driverIDXField;
            }
            set {
                this.driverIDXField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Nick {
            get {
                return this.nickField;
            }
            set {
                this.nickField = value;
            }
        }
        
        /// <remarks/>
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
            }
        }
        
        /// <remarks/>
        public VehicleObject[] Vehicles {
            get {
                return this.vehiclesField;
            }
            set {
                this.vehiclesField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateStarted {
            get {
                return this.dateStartedField;
            }
            set {
                this.dateStartedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateTerminated {
            get {
                return this.dateTerminatedField;
            }
            set {
                this.dateTerminatedField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        public LocationInfo LastKnownLocation {
            get {
                return this.lastKnownLocationField;
            }
            set {
                this.lastKnownLocationField = value;
            }
        }
        
        /// <remarks/>
        public bool IdleDetected {
            get {
                return this.idleDetectedField;
            }
            set {
                this.idleDetectedField = value;
            }
        }
        
        /// <remarks/>
        public int BattPCT {
            get {
                return this.battPCTField;
            }
            set {
                this.battPCTField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime BattLastUpdate {
            get {
                return this.battLastUpdateField;
            }
            set {
                this.battLastUpdateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xdel.com/L2/")]
    public partial class VehicleObject {
        
        private long vehicleIDXField;
        
        private VehicleTypeObject vehicleTypeField;
        
        private string licensePlateField;
        
        private int maxWeightField;
        
        private int maxVolumeField;
        
        /// <remarks/>
        public long VehicleIDX {
            get {
                return this.vehicleIDXField;
            }
            set {
                this.vehicleIDXField = value;
            }
        }
        
        /// <remarks/>
        public VehicleTypeObject VehicleType {
            get {
                return this.vehicleTypeField;
            }
            set {
                this.vehicleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string LicensePlate {
            get {
                return this.licensePlateField;
            }
            set {
                this.licensePlateField = value;
            }
        }
        
        /// <remarks/>
        public int MaxWeight {
            get {
                return this.maxWeightField;
            }
            set {
                this.maxWeightField = value;
            }
        }
        
        /// <remarks/>
        public int MaxVolume {
            get {
                return this.maxVolumeField;
            }
            set {
                this.maxVolumeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xdel.com/L2/")]
    public partial class VehicleTypeObject {
        
        private long vehicleTypeIDXField;
        
        private string vehicleTypeNameField;
        
        private int rankField;
        
        /// <remarks/>
        public long VehicleTypeIDX {
            get {
                return this.vehicleTypeIDXField;
            }
            set {
                this.vehicleTypeIDXField = value;
            }
        }
        
        /// <remarks/>
        public string VehicleTypeName {
            get {
                return this.vehicleTypeNameField;
            }
            set {
                this.vehicleTypeNameField = value;
            }
        }
        
        /// <remarks/>
        public int Rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xdel.com/L2/")]
    public partial class LocationInfo {
        
        private double latitudeField;
        
        private double longitudeField;
        
        private int accuracyField;
        
        private System.DateTime timestampField;
        
        /// <remarks/>
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
            }
        }
        
        /// <remarks/>
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
            }
        }
        
        /// <remarks/>
        public int Accuracy {
            get {
                return this.accuracyField;
            }
            set {
                this.accuracyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetL2DriversCompletedEventHandler(object sender, GetL2DriversCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetL2DriversCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetL2DriversCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DriverObject[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DriverObject[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetLocationsCompletedEventHandler(object sender, GetLocationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LocationInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LocationInfo[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591